version: '3.8'

services:
  app:
    build:
      context: ../
      dockerfile: docker/spring-boot/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    restart: on-failure
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    hostname: prometheus
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    restart: unless-stopped
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    hostname: grafana
    networks:
      - monitoring

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    container_name: elasticsearch
    networks:
      - elk
    environment:
      - node.name=elasticsearch
      - cluster.name=elk-cluster
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.13.4
    container_name: filebeat
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./filebeat/logs:/var/log:ro
    networks:
      - elk
    depends_on:
      - logstash

  logstash:
    image: docker.elastic.co/logstash/logstash:7.13.4
    container_name: logstash
    networks:
      - elk
    environment:
      - LS_JAVA_OPTS=-Xms256m -Xmx256m
      - ELASTIC_USER= elastic
      - ELASTIC_PASSWORD= changeme
      - XPACK_MONITORING_ELASTICSEARCH_USERNAME= elastic
      - XPACK_MONITORING_ELASTICSEARCH_PASSWORD= changeme
    ports:
      - "5044:5044"  # Beats
      - "5000:5000"  # Logstash TCP input
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/templates/logstash.template.json:/usr/share/logstash/templates/logstash.template.json
    depends_on:
      - elasticsearch
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.4
    container_name: kibana
    networks:
      - elk
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED=true
      - XPACK_MONITORING_COLLECTION_ENABLED=true
    ports:
      - "5601:5601"
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch
    restart: unless-stopped

volumes:
  grafana-storage:
  es_data:

networks:
  monitoring:
    driver: bridge
  elk:
    driver: bridge
